"use strict";exports.id=736,exports.ids=[736],exports.modules={1100:(e,t,s)=>{s.d(t,{GetRoleCredentialsCommand:()=>F,SSOClient:()=>$e});var n=s(61),o=s(44),r=s(70);const a={UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}};class i extends r.TJ{constructor(e){super(e),Object.setPrototypeOf(this,i.prototype)}}class c extends i{name="InvalidRequestException";$fault="client";constructor(e){super({name:"InvalidRequestException",$fault:"client",...e}),Object.setPrototypeOf(this,c.prototype)}}class u extends i{name="ResourceNotFoundException";$fault="client";constructor(e){super({name:"ResourceNotFoundException",$fault:"client",...e}),Object.setPrototypeOf(this,u.prototype)}}class d extends i{name="TooManyRequestsException";$fault="client";constructor(e){super({name:"TooManyRequestsException",$fault:"client",...e}),Object.setPrototypeOf(this,d.prototype)}}class p extends i{name="UnauthorizedException";$fault="client";constructor(e){super({name:"UnauthorizedException",$fault:"client",...e}),Object.setPrototypeOf(this,p.prototype)}}const l=e=>({...e,...e.accessToken&&{accessToken:r.$H}}),h=e=>({...e,...e.secretAccessKey&&{secretAccessKey:r.$H},...e.sessionToken&&{sessionToken:r.$H}}),m=e=>({...e,...e.roleCredentials&&{roleCredentials:h(e.roleCredentials)}});var g=s(82),y=s(42);const f=async(e,t)=>{const s=(0,y.lI)(e,t),n=(0,r.Tj)({},r.eU,{[D]:e[k]});s.bp("/federation/credentials");const o=(0,r.Tj)({[O]:[,(0,r.Y0)(e[C],"roleName")],[A]:[,(0,r.Y0)(e[I],"accountId")]});return s.m("GET").h(n).q(o).b(undefined),s.build()},S=async(e,t)=>{if(200!==e.statusCode&&e.statusCode>=300)return w(e,t);const s=(0,r.Tj)({$metadata:R(e)}),n=(0,r.Y0)((0,r.Xk)(await(0,g.Y2)(e.body,t)),"body"),o=(0,r.s)(n,{roleCredentials:r.Ss});return Object.assign(s,o),s},w=async(e,t)=>{const s={...e,body:await(0,g.CG)(e.body,t)},n=(0,g.cJ)(e,s.body);switch(n){case"InvalidRequestException":case"com.amazonaws.sso#InvalidRequestException":throw await P(s,t);case"ResourceNotFoundException":case"com.amazonaws.sso#ResourceNotFoundException":throw await v(s,t);case"TooManyRequestsException":case"com.amazonaws.sso#TooManyRequestsException":throw await b(s,t);case"UnauthorizedException":case"com.amazonaws.sso#UnauthorizedException":throw await E(s,t);default:const o=s.body;return x({output:e,parsedBody:o,errorCode:n})}},x=(0,r.jr)(i),P=async(e,t)=>{const s=(0,r.Tj)({}),n=e.body,o=(0,r.s)(n,{message:r.lK});Object.assign(s,o);const a=new c({$metadata:R(e),...s});return(0,r.Mw)(a,e.body)},v=async(e,t)=>{const s=(0,r.Tj)({}),n=e.body,o=(0,r.s)(n,{message:r.lK});Object.assign(s,o);const a=new u({$metadata:R(e),...s});return(0,r.Mw)(a,e.body)},b=async(e,t)=>{const s=(0,r.Tj)({}),n=e.body,o=(0,r.s)(n,{message:r.lK});Object.assign(s,o);const a=new d({$metadata:R(e),...s});return(0,r.Mw)(a,e.body)},E=async(e,t)=>{const s=(0,r.Tj)({}),n=e.body,o=(0,r.s)(n,{message:r.lK});Object.assign(s,o);const a=new p({$metadata:R(e),...s});return(0,r.Mw)(a,e.body)},R=e=>({httpStatusCode:e.statusCode,requestId:e.headers["x-amzn-requestid"]??e.headers["x-amzn-request-id"]??e.headers["x-amz-request-id"],extendedRequestId:e.headers["x-amz-id-2"],cfId:e.headers["x-amz-cf-id"]}),I="accountId",k="accessToken",A="account_id",C="roleName",O="role_name",D="x-amz-sso_bearer_token";class F extends(r.uB.classBuilder().ep(a).m((function(e,t,s,r){return[(0,o.TM)(s,this.serialize,this.deserialize),(0,n.rD)(s,e.getEndpointParameterInstructions())]})).s("SWBPortalService","GetRoleCredentials",{}).n("SSOClient","GetRoleCredentialsCommand").f(l,m).ser(f).de(S).build()){}var j=s(36),q=s(39),U=s(40),$=s(41),z=s(59),T=s(60),M=s(66),N=s(71),G=s(43);const H=async(e,t,s)=>({operation:(0,G.u)(t).operation,region:await(0,G.t)(e.region)()||(()=>{throw new Error("expected `region` to be configured for `aws.auth#sigv4`")})()});const L=e=>{const t=[];switch(e.operation){case"GetRoleCredentials":case"ListAccountRoles":case"ListAccounts":case"Logout":t.push({schemeId:"smithy.api#noAuth"});break;default:t.push(function(e){return{schemeId:"aws.auth#sigv4",signingProperties:{name:"awsssoportal",region:e.region},propertiesExtractor:(e,t)=>({signingProperties:{config:e,context:t}})}}(e))}return t},_="3.840.0";var B=s(79),V=s(80),K=s(74),W=s(75),J=s(62),Q=s(51),X=s(76),Y=s(67),Z=s(77),ee=s(65),te=s(47),se=s(50),ne=s(57),oe=s(58);const re="required",ae="fn",ie="argv",ce="ref",ue=!0,de="isSet",pe="booleanEquals",le="error",he="endpoint",me="tree",ge="PartitionResult",ye="getAttr",fe={[re]:!1,type:"String"},Se={[re]:!0,default:!1,type:"Boolean"},we={[ce]:"Endpoint"},xe={[ae]:pe,[ie]:[{[ce]:"UseFIPS"},!0]},Pe={[ae]:pe,[ie]:[{[ce]:"UseDualStack"},!0]},ve={},be={[ae]:ye,[ie]:[{[ce]:ge},"supportsFIPS"]},Ee={[ce]:ge},Re={[ae]:pe,[ie]:[!0,{[ae]:ye,[ie]:[Ee,"supportsDualStack"]}]},Ie=[xe],ke=[Pe],Ae=[{[ce]:"Region"}],Ce={version:"1.0",parameters:{Region:fe,UseDualStack:Se,UseFIPS:Se,Endpoint:fe},rules:[{conditions:[{[ae]:de,[ie]:[we]}],rules:[{conditions:Ie,error:"Invalid Configuration: FIPS and custom endpoint are not supported",type:le},{conditions:ke,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",type:le},{endpoint:{url:we,properties:ve,headers:ve},type:he}],type:me},{conditions:[{[ae]:de,[ie]:Ae}],rules:[{conditions:[{[ae]:"aws.partition",[ie]:Ae,assign:ge}],rules:[{conditions:[xe,Pe],rules:[{conditions:[{[ae]:pe,[ie]:[ue,be]},Re],rules:[{endpoint:{url:"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:ve,headers:ve},type:he}],type:me},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",type:le}],type:me},{conditions:Ie,rules:[{conditions:[{[ae]:pe,[ie]:[be,ue]}],rules:[{conditions:[{[ae]:"stringEquals",[ie]:[{[ae]:ye,[ie]:[Ee,"name"]},"aws-us-gov"]}],endpoint:{url:"https://portal.sso.{Region}.amazonaws.com",properties:ve,headers:ve},type:he},{endpoint:{url:"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}",properties:ve,headers:ve},type:he}],type:me},{error:"FIPS is enabled but this partition does not support FIPS",type:le}],type:me},{conditions:ke,rules:[{conditions:[Re],rules:[{endpoint:{url:"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:ve,headers:ve},type:he}],type:me},{error:"DualStack is enabled but this partition does not support DualStack",type:le}],type:me},{endpoint:{url:"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}",properties:ve,headers:ve},type:he}],type:me}],type:me},{error:"Invalid Configuration: Missing Region",type:le}]},Oe=new oe.kS({size:50,params:["Endpoint","Region","UseDualStack","UseFIPS"]}),De=(e,t={})=>Oe.get(e,(()=>(0,oe.sO)(Ce,{endpointParams:e,logger:t.logger})));oe.mw.aws=ne.UF;var Fe=s(78);const je=e=>{(0,r.I9)(process.version);const t=(0,Fe.I)(e),s=()=>t().then(r.lT),n=(e=>({apiVersion:"2019-06-10",base64Decoder:e?.base64Decoder??te.E,base64Encoder:e?.base64Encoder??te.n,disableHostPrefix:e?.disableHostPrefix??!1,endpointProvider:e?.endpointProvider??De,extensions:e?.extensions??[],httpAuthSchemeProvider:e?.httpAuthSchemeProvider??L,httpAuthSchemes:e?.httpAuthSchemes??[{schemeId:"aws.auth#sigv4",identityProvider:e=>e.getIdentityProvider("aws.auth#sigv4"),signer:new Z.f2},{schemeId:"smithy.api#noAuth",identityProvider:e=>e.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new y.mR}],logger:e?.logger??new r.N4,serviceId:e?.serviceId??"SSO",urlParser:e?.urlParser??ee.D,utf8Decoder:e?.utf8Decoder??se.ar,utf8Encoder:e?.utf8Encoder??se.Pq}))(e);(0,B.I)(process.version);const o={profile:e?.profile,logger:n.logger};return{...n,...e,runtime:"node",defaultsMode:t,authSchemePreference:e?.authSchemePreference??(0,J.Z)(V.$,o),bodyLengthChecker:e?.bodyLengthChecker??X.n,defaultUserAgentProvider:e?.defaultUserAgentProvider??(0,K.pf)({serviceId:n.serviceId,clientVersion:_}),maxAttempts:e?.maxAttempts??(0,J.Z)(M.qs,e),region:e?.region??(0,J.Z)(z.GG,{...z.zH,...o}),requestHandler:Q.$c.create(e?.requestHandler??s),retryMode:e?.retryMode??(0,J.Z)({...M.kN,default:async()=>(await s()).retryMode||Y.L0},e),sha256:e?.sha256??W.V.bind(null,"sha256"),streamCollector:e?.streamCollector??Q.kv,useDualstackEndpoint:e?.useDualstackEndpoint??(0,J.Z)(z.e$,o),useFipsEndpoint:e?.useFipsEndpoint??(0,J.Z)(z.Ko,o),userAgentAppId:e?.userAgentAppId??(0,J.Z)(K.hV,o)}};var qe=s(81),Ue=s(37);class $e extends r.Kj{config;constructor(...[e]){const t=je(e||{});super(t),this.initConfig=t;const s=(o=t,Object.assign(o,{useDualstackEndpoint:o.useDualstackEndpoint??!1,useFipsEndpoint:o.useFipsEndpoint??!1,defaultSigningName:"awsssoportal"}));var o;const a=(0,$.Dc)(s),i=(0,M.$z)(a),c=(0,z.TD)(i),u=(0,j.OV)(c),d=((e,t)=>{const s=Object.assign((0,qe.Rq)(e),(0,r.xA)(e),(0,Ue.eS)(e),(e=>{const t=e.httpAuthSchemes;let s=e.httpAuthSchemeProvider,n=e.credentials;return{setHttpAuthScheme(e){const s=t.findIndex((t=>t.schemeId===e.schemeId));-1===s?t.push(e):t.splice(s,1,e)},httpAuthSchemes:()=>t,setHttpAuthSchemeProvider(e){s=e},httpAuthSchemeProvider:()=>s,setCredentials(e){n=e},credentials:()=>n}})(e));return t.forEach((e=>e.configure(s))),Object.assign(e,(0,qe.$3)(s),(0,r.uv)(s),(0,Ue.jt)(s),{httpAuthSchemes:(n=s).httpAuthSchemes(),httpAuthSchemeProvider:n.httpAuthSchemeProvider(),credentials:n.credentials()});var n})((e=>{const t=(0,N.h)(e);return Object.assign(t,{authSchemePreference:(0,G.t)(e.authSchemePreference??[])})})((0,n.Co)(u)),e?.extensions||[]);this.config=d,this.middlewareStack.use((0,$.sM)(this.config)),this.middlewareStack.use((0,M.ey)(this.config)),this.middlewareStack.use((0,T.vK)(this.config)),this.middlewareStack.use((0,j.TC)(this.config)),this.middlewareStack.use((0,q.Y7)(this.config)),this.middlewareStack.use((0,U.n4)(this.config)),this.middlewareStack.use((0,y.wB)(this.config,{httpAuthSchemeParametersProvider:H,identityProviderConfigProvider:async e=>new y.h$({"aws.auth#sigv4":e.credentials})})),this.middlewareStack.use((0,y.lW)(this.config))}destroy(){super.destroy()}}}};