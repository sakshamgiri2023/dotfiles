"use strict";exports.id=616,exports.ids=[616],exports.modules={95616:(e,t,s)=>{s.d(t,{GetRoleCredentialsCommand:()=>GetRoleCredentialsCommand,SSOClient:()=>SSOClient});var o=s(85188),n=s(42099),r=s(98140);const i={UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}};class SSOServiceException extends r.TJ{constructor(e){super(e),Object.setPrototypeOf(this,SSOServiceException.prototype)}}class InvalidRequestException extends SSOServiceException{name="InvalidRequestException";$fault="client";constructor(e){super({name:"InvalidRequestException",$fault:"client",...e}),Object.setPrototypeOf(this,InvalidRequestException.prototype)}}class ResourceNotFoundException extends SSOServiceException{name="ResourceNotFoundException";$fault="client";constructor(e){super({name:"ResourceNotFoundException",$fault:"client",...e}),Object.setPrototypeOf(this,ResourceNotFoundException.prototype)}}class TooManyRequestsException extends SSOServiceException{name="TooManyRequestsException";$fault="client";constructor(e){super({name:"TooManyRequestsException",$fault:"client",...e}),Object.setPrototypeOf(this,TooManyRequestsException.prototype)}}class UnauthorizedException extends SSOServiceException{name="UnauthorizedException";$fault="client";constructor(e){super({name:"UnauthorizedException",$fault:"client",...e}),Object.setPrototypeOf(this,UnauthorizedException.prototype)}}const a=e=>({...e,...e.accessToken&&{accessToken:r.$H}}),c=e=>({...e,...e.secretAccessKey&&{secretAccessKey:r.$H},...e.sessionToken&&{sessionToken:r.$H}}),d=e=>({...e,...e.roleCredentials&&{roleCredentials:c(e.roleCredentials)}});var u=s(111),p=s(85391);const l=async(e,t)=>{const s=(0,p.lI)(e,t),o=(0,r.Tj)({},r.eU,{[R]:e[w]});s.bp("/federation/credentials");const n=(0,r.Tj)({[I]:[,(0,r.Y0)(e[P],"roleName")],[b]:[,(0,r.Y0)(e[E],"accountId")]});return s.m("GET").h(o).q(n).b(undefined),s.build()},h=async(e,t)=>{if(200!==e.statusCode&&e.statusCode>=300)return m(e,t);const s=(0,r.Tj)({$metadata:v(e)}),o=(0,r.Y0)((0,r.Xk)(await(0,u.Y2)(e.body,t)),"body"),n=(0,r.s)(o,{roleCredentials:r.Ss});return Object.assign(s,n),s},m=async(e,t)=>{const s={...e,body:await(0,u.CG)(e.body,t)},o=(0,u.cJ)(e,s.body);switch(o){case"InvalidRequestException":case"com.amazonaws.sso#InvalidRequestException":throw await S(s,t);case"ResourceNotFoundException":case"com.amazonaws.sso#ResourceNotFoundException":throw await g(s,t);case"TooManyRequestsException":case"com.amazonaws.sso#TooManyRequestsException":throw await f(s,t);case"UnauthorizedException":case"com.amazonaws.sso#UnauthorizedException":throw await x(s,t);default:const n=s.body;return y({output:e,parsedBody:n,errorCode:o})}},y=(0,r.jr)(SSOServiceException),S=async(e,t)=>{const s=(0,r.Tj)({}),o=e.body,n=(0,r.s)(o,{message:r.lK});Object.assign(s,n);const i=new InvalidRequestException({$metadata:v(e),...s});return(0,r.Mw)(i,e.body)},g=async(e,t)=>{const s=(0,r.Tj)({}),o=e.body,n=(0,r.s)(o,{message:r.lK});Object.assign(s,n);const i=new ResourceNotFoundException({$metadata:v(e),...s});return(0,r.Mw)(i,e.body)},f=async(e,t)=>{const s=(0,r.Tj)({}),o=e.body,n=(0,r.s)(o,{message:r.lK});Object.assign(s,n);const i=new TooManyRequestsException({$metadata:v(e),...s});return(0,r.Mw)(i,e.body)},x=async(e,t)=>{const s=(0,r.Tj)({}),o=e.body,n=(0,r.s)(o,{message:r.lK});Object.assign(s,n);const i=new UnauthorizedException({$metadata:v(e),...s});return(0,r.Mw)(i,e.body)},v=e=>({httpStatusCode:e.statusCode,requestId:e.headers["x-amzn-requestid"]??e.headers["x-amzn-request-id"]??e.headers["x-amz-request-id"],extendedRequestId:e.headers["x-amz-id-2"],cfId:e.headers["x-amz-cf-id"]}),E="accountId",w="accessToken",b="account_id",P="roleName",I="role_name",R="x-amz-sso_bearer_token";class GetRoleCredentialsCommand extends(r.uB.classBuilder().ep(i).m((function(e,t,s,r){return[(0,n.TM)(s,this.serialize,this.deserialize),(0,o.rD)(s,e.getEndpointParameterInstructions())]})).s("SWBPortalService","GetRoleCredentials",{}).n("SSOClient","GetRoleCredentialsCommand").f(a,d).ser(l).de(h).build()){}var k=s(77624),C=s(64940),A=s(42070),O=s(34514),q=s(97138),T=s(71538),D=s(55560),z=s(55029),F=s(43966);const $=async(e,t,s)=>({operation:(0,F.u)(t).operation,region:await(0,F.t)(e.region)()||(()=>{throw new Error("expected `region` to be configured for `aws.auth#sigv4`")})()});const j=e=>{const t=[];switch(e.operation){case"GetRoleCredentials":case"ListAccountRoles":case"ListAccounts":case"Logout":t.push({schemeId:"smithy.api#noAuth"});break;default:t.push(function(e){return{schemeId:"aws.auth#sigv4",signingProperties:{name:"awsssoportal",region:e.region},propertiesExtractor:(e,t)=>({signingProperties:{config:e,context:t}})}}(e))}return t},U="3.750.0";var M=s(50829),N=s(75286),G=s(71082),H=s(32740),K=s(67350),B=s(63760),L=s(34452),Z=s(66403),V=s(74630),Y=s(44217),_=s(37016),J=s(88693),W=s(78958);const X="required",Q="fn",ee="argv",te="ref",se=!0,oe="isSet",ne="booleanEquals",re="error",ie="endpoint",ae="tree",ce="PartitionResult",de="getAttr",ue={[X]:!1,type:"String"},pe={[X]:!0,default:!1,type:"Boolean"},le={[te]:"Endpoint"},he={[Q]:ne,[ee]:[{[te]:"UseFIPS"},!0]},me={[Q]:ne,[ee]:[{[te]:"UseDualStack"},!0]},ye={},Se={[Q]:de,[ee]:[{[te]:ce},"supportsFIPS"]},ge={[te]:ce},fe={[Q]:ne,[ee]:[!0,{[Q]:de,[ee]:[ge,"supportsDualStack"]}]},xe=[he],ve=[me],Ee=[{[te]:"Region"}],we={version:"1.0",parameters:{Region:ue,UseDualStack:pe,UseFIPS:pe,Endpoint:ue},rules:[{conditions:[{[Q]:oe,[ee]:[le]}],rules:[{conditions:xe,error:"Invalid Configuration: FIPS and custom endpoint are not supported",type:re},{conditions:ve,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",type:re},{endpoint:{url:le,properties:ye,headers:ye},type:ie}],type:ae},{conditions:[{[Q]:oe,[ee]:Ee}],rules:[{conditions:[{[Q]:"aws.partition",[ee]:Ee,assign:ce}],rules:[{conditions:[he,me],rules:[{conditions:[{[Q]:ne,[ee]:[se,Se]},fe],rules:[{endpoint:{url:"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:ye,headers:ye},type:ie}],type:ae},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",type:re}],type:ae},{conditions:xe,rules:[{conditions:[{[Q]:ne,[ee]:[Se,se]}],rules:[{conditions:[{[Q]:"stringEquals",[ee]:[{[Q]:de,[ee]:[ge,"name"]},"aws-us-gov"]}],endpoint:{url:"https://portal.sso.{Region}.amazonaws.com",properties:ye,headers:ye},type:ie},{endpoint:{url:"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}",properties:ye,headers:ye},type:ie}],type:ae},{error:"FIPS is enabled but this partition does not support FIPS",type:re}],type:ae},{conditions:ve,rules:[{conditions:[fe],rules:[{endpoint:{url:"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:ye,headers:ye},type:ie}],type:ae},{error:"DualStack is enabled but this partition does not support DualStack",type:re}],type:ae},{endpoint:{url:"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}",properties:ye,headers:ye},type:ie}],type:ae}],type:ae},{error:"Invalid Configuration: Missing Region",type:re}]},be=new W.kS({size:50,params:["Endpoint","Region","UseDualStack","UseFIPS"]}),Pe=(e,t={})=>be.get(e,(()=>(0,W.sO)(we,{endpointParams:e,logger:t.logger})));W.mw.aws=J.UF;var Ie=s(87956);const Re=e=>{(0,r.I9)(process.version);const t=(0,Ie.I)(e),s=()=>t().then(r.lT),o=(e=>({apiVersion:"2019-06-10",base64Decoder:e?.base64Decoder??Y.E,base64Encoder:e?.base64Encoder??Y.n,disableHostPrefix:e?.disableHostPrefix??!1,endpointProvider:e?.endpointProvider??Pe,extensions:e?.extensions??[],httpAuthSchemeProvider:e?.httpAuthSchemeProvider??j,httpAuthSchemes:e?.httpAuthSchemes??[{schemeId:"aws.auth#sigv4",identityProvider:e=>e.getIdentityProvider("aws.auth#sigv4"),signer:new Z.f2},{schemeId:"smithy.api#noAuth",identityProvider:e=>e.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new p.mR}],logger:e?.logger??new r.N4,serviceId:e?.serviceId??"SSO",urlParser:e?.urlParser??V.D,utf8Decoder:e?.utf8Decoder??_.ar,utf8Encoder:e?.utf8Encoder??_.Pq}))(e);(0,M.I)(process.version);const n={profile:e?.profile};return{...o,...e,runtime:"node",defaultsMode:t,bodyLengthChecker:e?.bodyLengthChecker??B.n,defaultUserAgentProvider:e?.defaultUserAgentProvider??(0,N.pf)({serviceId:o.serviceId,clientVersion:U}),maxAttempts:e?.maxAttempts??(0,H.Z)(D.qs,e),region:e?.region??(0,H.Z)(q.GG,{...q.zH,...n}),requestHandler:K.$c.create(e?.requestHandler??s),retryMode:e?.retryMode??(0,H.Z)({...D.kN,default:async()=>(await s()).retryMode||L.L0},e),sha256:e?.sha256??G.V.bind(null,"sha256"),streamCollector:e?.streamCollector??K.kv,useDualstackEndpoint:e?.useDualstackEndpoint??(0,H.Z)(q.e$,n),useFipsEndpoint:e?.useFipsEndpoint??(0,H.Z)(q.Ko,n),userAgentAppId:e?.userAgentAppId??(0,H.Z)(N.hV,n)}};var ke=s(95785),Ce=s(57386);const Ae=e=>{const t=e.httpAuthSchemes;let s=e.httpAuthSchemeProvider,o=e.credentials;return{setHttpAuthScheme(e){const s=t.findIndex((t=>t.schemeId===e.schemeId));-1===s?t.push(e):t.splice(s,1,e)},httpAuthSchemes:()=>t,setHttpAuthSchemeProvider(e){s=e},httpAuthSchemeProvider:()=>s,setCredentials(e){o=e},credentials:()=>o}};class SSOClient extends r.Kj{config;constructor(...[e]){const t=Re(e||{}),s=(n=t,{...n,useDualstackEndpoint:n.useDualstackEndpoint??!1,useFipsEndpoint:n.useFipsEndpoint??!1,defaultSigningName:"awsssoportal"});var n;const i=(0,O.Dc)(s),a=(0,D.$z)(i),c=(0,q.TD)(a),d=(0,k.OV)(c),u=(0,o.Co)(d);var l;const h=((e,t)=>{const s={...(0,ke.Rq)(e),...(0,r.xA)(e),...(0,Ce.eS)(e),...Ae(e)};return t.forEach((e=>e.configure(s))),{...e,...(0,ke.$3)(s),...(0,r.uv)(s),...(0,Ce.jt)(s),...(o=s,{httpAuthSchemes:o.httpAuthSchemes(),httpAuthSchemeProvider:o.httpAuthSchemeProvider(),credentials:o.credentials()})};var o})((l=u,{...(0,z.h)(l)}),e?.extensions||[]);super(h),this.config=h,this.middlewareStack.use((0,O.sM)(this.config)),this.middlewareStack.use((0,D.ey)(this.config)),this.middlewareStack.use((0,T.vK)(this.config)),this.middlewareStack.use((0,k.TC)(this.config)),this.middlewareStack.use((0,C.Y7)(this.config)),this.middlewareStack.use((0,A.n4)(this.config)),this.middlewareStack.use((0,p.wB)(this.config,{httpAuthSchemeParametersProvider:$,identityProviderConfigProvider:async e=>new p.h$({"aws.auth#sigv4":e.credentials})})),this.middlewareStack.use((0,p.lW)(this.config))}destroy(){super.destroy()}}}};
//# sourceMappingURL=616.js.map