"use strict";exports.id=155,exports.ids=[155],exports.modules={63155:(e,t,n)=>{n.d(t,{GetRoleCredentialsCommand:()=>GetRoleCredentialsCommand,SSOClient:()=>SSOClient});const r=/^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/,s=/(\d+\.){3}\d+/,i=/\.\./,o=e=>r.test(e)&&!s.test(e)&&!i.test(e),a=e=>{const[t,n,r,,,s]=e.split(":"),i="arn"===t&&e.split(":").length>=6,o=Boolean(i&&n&&r&&s);if(i&&!o)throw new Error(`Invalid ARN: ${e} was an invalid ARN.`);return o},c=(e,t,n)=>{const r=async()=>{const r=n[e]??n[t];return"function"==typeof r?r():r};return"credentialScope"===e||"CredentialScope"===t?async()=>{const e="function"==typeof n.credentials?await n.credentials():n.credentials;return e?.credentialScope??e?.CredentialScope}:"accountId"===e||"AccountId"===t?async()=>{const e="function"==typeof n.credentials?await n.credentials():n.credentials;return e?.accountId??e?.AccountId}:"endpoint"===e||"endpoint"===t?async()=>{const e=await r();if(e&&"object"==typeof e){if("url"in e)return e.url.href;if("hostname"in e){const{protocol:t,hostname:n,port:r,path:s}=e;return`${t}//${n}${r?":"+r:""}${s}`}}return e}:r};var u=n(68184),d=n(4285);const l="AWS_ENDPOINT_URL",p="endpoint_url",g=async e=>(0,u.Z)((e=>({environmentVariableSelector:t=>{const n=e.split(" ").map((e=>e.toUpperCase())),r=t[[l,...n].join("_")];if(r)return r;return t[l]||void 0},configFileSelector:(t,n)=>{if(n&&t.services){const r=n[["services",t.services].join(d.QD)];if(r){const t=e.split(" ").map((e=>e.toLowerCase())),n=r[[t.join("_"),p].join(d.QD)];if(n)return n}}const r=t[p];if(r)return r},default:void 0}))(e??""))();var h=n(95714);const f=e=>"object"==typeof e?"url"in e?(0,h.D)(e.url):e:(0,h.D)(e),m=async(e,t,n)=>{const r={},s=t?.getEndpointParameterInstructions?.()||{};for(const[t,i]of Object.entries(s))switch(i.type){case"staticContextParams":r[t]=i.value;break;case"contextParams":r[t]=e[i.name];break;case"clientContextParams":case"builtInParams":r[t]=await c(i.name,t,n)();break;case"operationContextParams":r[t]=i.get(e);break;default:throw new Error("Unrecognized endpoint parameter instruction: "+JSON.stringify(i))}return 0===Object.keys(s).length&&Object.assign(r,n),"s3"===String(n.serviceId).toLowerCase()&&await(async e=>{const t=e?.Bucket||"";if("string"==typeof e.Bucket&&(e.Bucket=t.replace(/#/g,encodeURIComponent("#")).replace(/\?/g,encodeURIComponent("?"))),a(t)){if(!0===e.ForcePathStyle)throw new Error("Path-style addressing cannot be used with ARN buckets")}else(!o(t)||-1!==t.indexOf(".")&&!String(e.Endpoint).startsWith("http:")||t.toLowerCase()!==t||t.length<3)&&(e.ForcePathStyle=!0);return e.DisableMultiRegionAccessPoints&&(e.disableMultiRegionAccessPoints=!0,e.DisableMRAP=!0),e})(r),r};var y=n(32035),w=n(51434);const S=({config:e,instructions:t})=>(n,r)=>async s=>{e.endpoint&&(0,y.J7)(r,"ENDPOINT_OVERRIDE","N");const i=await(async(e,t,n,r)=>{if(!n.endpoint){let e;e=n.serviceConfiguredEndpoint?await n.serviceConfiguredEndpoint():await g(n.serviceId),e&&(n.endpoint=()=>Promise.resolve(f(e)))}const s=await m(e,t,n);if("function"!=typeof n.endpointProvider)throw new Error("config.endpointProvider is not set.");return n.endpointProvider(s,r)})(s.input,{getEndpointParameterInstructions:()=>t},{...e},r);r.endpointV2=i,r.authSchemes=i.properties?.authSchemes;const o=r.authSchemes?.[0];if(o){r.signing_region=o.signingRegion,r.signing_service=o.signingName;const e=(0,w.u)(r),t=e?.selectedHttpAuthScheme?.httpAuthOption;t&&(t.signingProperties=Object.assign(t.signingProperties||{},{signing_region:o.signingRegion,signingRegion:o.signingRegion,signing_service:o.signingName,signingName:o.signingName,signingRegionSet:o.signingRegionSet},o.properties))}return n({...s})};var E=n(39191);const v={step:"serialize",tags:["ENDPOINT_PARAMETERS","ENDPOINT_V2","ENDPOINT"],name:"endpointV2Middleware",override:!0,relation:"before",toMiddleware:E.Ou.name},R=(e,t)=>({applyToStack:n=>{n.addRelativeTo(S({config:e,instructions:t}),v)}});var b=n(74200);const A={UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}};class SSOServiceException extends b.TJ{constructor(e){super(e),Object.setPrototypeOf(this,SSOServiceException.prototype)}}class InvalidRequestException extends SSOServiceException{name="InvalidRequestException";$fault="client";constructor(e){super({name:"InvalidRequestException",$fault:"client",...e}),Object.setPrototypeOf(this,InvalidRequestException.prototype)}}class ResourceNotFoundException extends SSOServiceException{name="ResourceNotFoundException";$fault="client";constructor(e){super({name:"ResourceNotFoundException",$fault:"client",...e}),Object.setPrototypeOf(this,ResourceNotFoundException.prototype)}}class TooManyRequestsException extends SSOServiceException{name="TooManyRequestsException";$fault="client";constructor(e){super({name:"TooManyRequestsException",$fault:"client",...e}),Object.setPrototypeOf(this,TooManyRequestsException.prototype)}}class UnauthorizedException extends SSOServiceException{name="UnauthorizedException";$fault="client";constructor(e){super({name:"UnauthorizedException",$fault:"client",...e}),Object.setPrototypeOf(this,UnauthorizedException.prototype)}}const C=e=>({...e,...e.accessToken&&{accessToken:b.$H}}),T=e=>({...e,...e.secretAccessKey&&{secretAccessKey:b.$H},...e.sessionToken&&{sessionToken:b.$H}}),x=e=>({...e,...e.roleCredentials&&{roleCredentials:T(e.roleCredentials)}}),I=(e,t)=>((e,t)=>(0,b.Px)(e,t).then((e=>t.utf8Encoder(e))))(e,t).then((e=>{if(e.length)try{return JSON.parse(e)}catch(t){throw"SyntaxError"===t?.name&&Object.defineProperty(t,"$responseBodyText",{value:e}),t}return{}})),k=async(e,t)=>{const n=await I(e,t);return n.message=n.message??n.Message,n},D=async(e,t)=>{const n=(0,y.lI)(e,t),r=(0,b.Tj)({},b.eU,{[W]:e[j]});n.bp("/federation/credentials");const s=(0,b.Tj)({[H]:[,(0,b.Y0)(e[z],"roleName")],[q]:[,(0,b.Y0)(e[F],"accountId")]});return n.m("GET").h(r).q(s).b(undefined),n.build()},P=async(e,t)=>{if(200!==e.statusCode&&e.statusCode>=300)return $(e,t);const n=(0,b.Tj)({$metadata:L(e)}),r=(0,b.Y0)((0,b.Xk)(await I(e.body,t)),"body"),s=(0,b.s)(r,{roleCredentials:b.Ss});return Object.assign(n,s),n},$=async(e,t)=>{const n={...e,body:await k(e.body,t)},r=((e,t)=>{const n=e=>{let t=e;return"number"==typeof t&&(t=t.toString()),t.indexOf(",")>=0&&(t=t.split(",")[0]),t.indexOf(":")>=0&&(t=t.split(":")[0]),t.indexOf("#")>=0&&(t=t.split("#")[1]),t},r=(s=e.headers,i="x-amzn-errortype",Object.keys(s).find((e=>e.toLowerCase()===i.toLowerCase())));var s,i;return void 0!==r?n(e.headers[r]):void 0!==t.code?n(t.code):void 0!==t.__type?n(t.__type):void 0})(e,n.body);switch(r){case"InvalidRequestException":case"com.amazonaws.sso#InvalidRequestException":throw await N(n,t);case"ResourceNotFoundException":case"com.amazonaws.sso#ResourceNotFoundException":throw await _(n,t);case"TooManyRequestsException":case"com.amazonaws.sso#TooManyRequestsException":throw await U(n,t);case"UnauthorizedException":case"com.amazonaws.sso#UnauthorizedException":throw await M(n,t);default:const s=n.body;return O({output:e,parsedBody:s,errorCode:r})}},O=(0,b.jr)(SSOServiceException),N=async(e,t)=>{const n=(0,b.Tj)({}),r=e.body,s=(0,b.s)(r,{message:b.lK});Object.assign(n,s);const i=new InvalidRequestException({$metadata:L(e),...n});return(0,b.Mw)(i,e.body)},_=async(e,t)=>{const n=(0,b.Tj)({}),r=e.body,s=(0,b.s)(r,{message:b.lK});Object.assign(n,s);const i=new ResourceNotFoundException({$metadata:L(e),...n});return(0,b.Mw)(i,e.body)},U=async(e,t)=>{const n=(0,b.Tj)({}),r=e.body,s=(0,b.s)(r,{message:b.lK});Object.assign(n,s);const i=new TooManyRequestsException({$metadata:L(e),...n});return(0,b.Mw)(i,e.body)},M=async(e,t)=>{const n=(0,b.Tj)({}),r=e.body,s=(0,b.s)(r,{message:b.lK});Object.assign(n,s);const i=new UnauthorizedException({$metadata:L(e),...n});return(0,b.Mw)(i,e.body)},L=e=>({httpStatusCode:e.statusCode,requestId:e.headers["x-amzn-requestid"]??e.headers["x-amzn-request-id"]??e.headers["x-amz-request-id"],extendedRequestId:e.headers["x-amz-id-2"],cfId:e.headers["x-amz-cf-id"]}),F="accountId",j="accessToken",q="account_id",z="roleName",H="role_name",W="x-amz-sso_bearer_token";class GetRoleCredentialsCommand extends(b.uB.classBuilder().ep(A).m((function(e,t,n,r){return[(0,E.TM)(n,this.serialize,this.deserialize),R(n,e.getEndpointParameterInstructions())]})).s("SWBPortalService","GetRoleCredentials",{}).n("SSOClient","GetRoleCredentialsCommand").f(C,x).ser(D).de(P).build()){}var B=n(70934);const V={name:"hostHeaderMiddleware",step:"build",priority:"low",tags:["HOST"],override:!0},G=e=>({applyToStack:t=>{t.add((e=>t=>async n=>{if(!B.Kd.isInstance(n.request))return t(n);const{request:r}=n,{handlerProtocol:s=""}=e.requestHandler.metadata||{};if(s.indexOf("h2")>=0&&!r.headers[":authority"])delete r.headers.host,r.headers[":authority"]=r.hostname+(r.port?":"+r.port:"");else if(!r.headers.host){let e=r.hostname;null!=r.port&&(e+=`:${r.port}`),r.headers.host=e}return t(n)})(e),V)}}),K={name:"loggerMiddleware",tags:["LOGGER"],step:"initialize",override:!0},X="X-Amzn-Trace-Id",Z={step:"build",tags:["RECURSION_DETECTION"],name:"recursionDetectionMiddleware",override:!0,priority:"low"},J=e=>({applyToStack:t=>{t.add((e=>t=>async n=>{const{request:r}=n;if(!B.Kd.isInstance(r)||"node"!==e.runtime||r.headers.hasOwnProperty(X))return t(n);const s=process.env.AWS_LAMBDA_FUNCTION_NAME,i=process.env._X_AMZN_TRACE_ID,o=e=>"string"==typeof e&&e.length>0;return o(s)&&o(i)&&(r.headers[X]=i),t({...n,request:r})})(e),Z)}}),Y=void 0;const Q=new RegExp("^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$"),ee=e=>Q.test(e)||e.startsWith("[")&&e.endsWith("]"),te=new RegExp("^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$"),ne=(e,t=!1)=>{if(!t)return te.test(e);const n=e.split(".");for(const e of n)if(!ne(e))return!1;return!0},re={},se="endpoints";function ie(e){return"object"!=typeof e||null==e?e:"ref"in e?`$${ie(e.ref)}`:"fn"in e?`${e.fn}(${(e.argv||[]).map(ie).join(", ")})`:JSON.stringify(e,null,2)}class EndpointError extends Error{constructor(e){super(e),this.name="EndpointError"}}const oe=(e,t)=>(e=>{const t=e.split("."),n=[];for(const r of t){const t=r.indexOf("[");if(-1!==t){if(r.indexOf("]")!==r.length-1)throw new EndpointError(`Path: '${e}' does not end with ']'`);const s=r.slice(t+1,-1);if(Number.isNaN(parseInt(s)))throw new EndpointError(`Invalid array index: '${s}' in path: '${e}'`);0!==t&&n.push(r.slice(0,t)),n.push(s)}else n.push(r)}return n})(t).reduce(((n,r)=>{if("object"!=typeof n)throw new EndpointError(`Index '${r}' in '${t}' not found in '${JSON.stringify(e)}'`);return Array.isArray(n)?n[parseInt(r)]:n[r]}),e);var ae=n(63058);const ce={[ae.Ue.HTTP]:80,[ae.Ue.HTTPS]:443},ue={booleanEquals:(e,t)=>e===t,getAttr:oe,isSet:e=>null!=e,isValidHostLabel:ne,not:e=>!e,parseURL:e=>{const t=(()=>{try{if(e instanceof URL)return e;if("object"==typeof e&&"hostname"in e){const{hostname:t,port:n,protocol:r="",path:s="",query:i={}}=e,o=new URL(`${r}//${t}${n?`:${n}`:""}${s}`);return o.search=Object.entries(i).map((([e,t])=>`${e}=${t}`)).join("&"),o}return new URL(e)}catch(e){return null}})();if(!t)return console.error(`Unable to parse ${JSON.stringify(e)} as a whatwg URL.`),null;const n=t.href,{host:r,hostname:s,pathname:i,protocol:o,search:a}=t;if(a)return null;const c=o.slice(0,-1);if(!Object.values(ae.Ue).includes(c))return null;const u=ee(s);return{scheme:c,authority:`${r}${n.includes(`${r}:${ce[c]}`)||"string"==typeof e&&e.includes(`${r}:${ce[c]}`)?`:${ce[c]}`:""}`,path:i,normalizedPath:i.endsWith("/")?i:`${i}/`,isIp:u}},stringEquals:(e,t)=>e===t,substring:(e,t,n,r)=>t>=n||e.length<n?null:r?e.substring(e.length-n,e.length-t):e.substring(t,n),uriEncode:e=>encodeURIComponent(e).replace(/[!*'()]/g,(e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`))},de=(e,t)=>{const n=[],r={...t.endpointParams,...t.referenceRecord};let s=0;for(;s<e.length;){const t=e.indexOf("{",s);if(-1===t){n.push(e.slice(s));break}n.push(e.slice(s,t));const i=e.indexOf("}",t);if(-1===i){n.push(e.slice(t));break}"{"===e[t+1]&&"}"===e[i+1]&&(n.push(e.slice(t+1,i)),s=i+2);const o=e.substring(t+1,i);if(o.includes("#")){const[e,t]=o.split("#");n.push(oe(r[e],t))}else n.push(r[o]);s=i+1}return n.join("")},le=(e,t,n)=>{if("string"==typeof e)return de(e,n);if(e.fn)return pe(e,n);if(e.ref)return(({ref:e},t)=>({...t.endpointParams,...t.referenceRecord}[e]))(e,n);throw new EndpointError(`'${t}': ${String(e)} is not a string, function or reference.`)},pe=({fn:e,argv:t},n)=>{const r=t.map((e=>["boolean","number"].includes(typeof e)?e:le(e,"arg",n))),s=e.split(".");return s[0]in re&&null!=s[1]?re[s[0]][s[1]](...r):ue[e](...r)},ge=({assign:e,...t},n)=>{if(e&&e in n.referenceRecord)throw new EndpointError(`'${e}' is already defined in Reference Record.`);const r=pe(t,n);return n.logger?.debug?.(`${se} evaluateCondition: ${ie(t)} = ${ie(r)}`),{result:""===r||!!r,...null!=e&&{toAssign:{name:e,value:r}}}},he=(e=[],t)=>{const n={};for(const r of e){const{result:e,toAssign:s}=ge(r,{...t,referenceRecord:{...t.referenceRecord,...n}});if(!e)return{result:e};s&&(n[s.name]=s.value,t.logger?.debug?.(`${se} assign: ${s.name} := ${ie(s.value)}`))}return{result:!0,referenceRecord:n}},fe=(e,t)=>Object.entries(e).reduce(((e,[n,r])=>({...e,[n]:r.map((e=>{const r=le(e,"Header value entry",t);if("string"!=typeof r)throw new EndpointError(`Header '${n}' value '${r}' is not a string`);return r}))})),{}),me=(e,t)=>{if(Array.isArray(e))return e.map((e=>me(e,t)));switch(typeof e){case"string":return de(e,t);case"object":if(null===e)throw new EndpointError(`Unexpected endpoint property: ${e}`);return ye(e,t);case"boolean":return e;default:throw new EndpointError("Unexpected endpoint property type: "+typeof e)}},ye=(e,t)=>Object.entries(e).reduce(((e,[n,r])=>({...e,[n]:me(r,t)})),{}),we=(e,t)=>{const n=le(e,"Endpoint URL",t);if("string"==typeof n)try{return new URL(n)}catch(e){throw console.error(`Failed to construct URL with ${n}`,e),e}throw new EndpointError("Endpoint URL must be a string, got "+typeof n)},Se=(e,t)=>{const{conditions:n,endpoint:r}=e,{result:s,referenceRecord:i}=he(n,t);if(!s)return;const o={...t,referenceRecord:{...t.referenceRecord,...i}},{url:a,properties:c,headers:u}=r;return t.logger?.debug?.(`${se} Resolving endpoint from template: ${ie(r)}`),{...null!=u&&{headers:fe(u,o)},...null!=c&&{properties:ye(c,o)},url:we(a,o)}},Ee=(e,t)=>{const{conditions:n,error:r}=e,{result:s,referenceRecord:i}=he(n,t);if(s)throw new EndpointError(le(r,"Error",{...t,referenceRecord:{...t.referenceRecord,...i}}))},ve=(e,t)=>{const{conditions:n,rules:r}=e,{result:s,referenceRecord:i}=he(n,t);if(s)return Re(r,{...t,referenceRecord:{...t.referenceRecord,...i}})},Re=(e,t)=>{for(const n of e)if("endpoint"===n.type){const e=Se(n,t);if(e)return e}else if("error"===n.type)Ee(n,t);else{if("tree"!==n.type)throw new EndpointError(`Unknown endpoint rule: ${n}`);{const e=ve(n,t);if(e)return e}}throw new EndpointError("Rules evaluation failed")},be=(e,t=!1)=>{if(t){for(const t of e.split("."))if(!be(t))return!1;return!0}return!!ne(e)&&(!(e.length<3||e.length>63)&&(e===e.toLowerCase()&&!ee(e)))};let Ae=JSON.parse('{"partitions":[{"id":"aws","outputs":{"dnsSuffix":"amazonaws.com","dualStackDnsSuffix":"api.aws","implicitGlobalRegion":"us-east-1","name":"aws","supportsDualStack":true,"supportsFIPS":true},"regionRegex":"^(us|eu|ap|sa|ca|me|af|il|mx)\\\\-\\\\w+\\\\-\\\\d+$","regions":{"af-south-1":{"description":"Africa (Cape Town)"},"ap-east-1":{"description":"Asia Pacific (Hong Kong)"},"ap-northeast-1":{"description":"Asia Pacific (Tokyo)"},"ap-northeast-2":{"description":"Asia Pacific (Seoul)"},"ap-northeast-3":{"description":"Asia Pacific (Osaka)"},"ap-south-1":{"description":"Asia Pacific (Mumbai)"},"ap-south-2":{"description":"Asia Pacific (Hyderabad)"},"ap-southeast-1":{"description":"Asia Pacific (Singapore)"},"ap-southeast-2":{"description":"Asia Pacific (Sydney)"},"ap-southeast-3":{"description":"Asia Pacific (Jakarta)"},"ap-southeast-4":{"description":"Asia Pacific (Melbourne)"},"ap-southeast-5":{"description":"Asia Pacific (Malaysia)"},"ap-southeast-7":{"description":"Asia Pacific (Thailand)"},"aws-global":{"description":"AWS Standard global region"},"ca-central-1":{"description":"Canada (Central)"},"ca-west-1":{"description":"Canada West (Calgary)"},"eu-central-1":{"description":"Europe (Frankfurt)"},"eu-central-2":{"description":"Europe (Zurich)"},"eu-north-1":{"description":"Europe (Stockholm)"},"eu-south-1":{"description":"Europe (Milan)"},"eu-south-2":{"description":"Europe (Spain)"},"eu-west-1":{"description":"Europe (Ireland)"},"eu-west-2":{"description":"Europe (London)"},"eu-west-3":{"description":"Europe (Paris)"},"il-central-1":{"description":"Israel (Tel Aviv)"},"me-central-1":{"description":"Middle East (UAE)"},"me-south-1":{"description":"Middle East (Bahrain)"},"mx-central-1":{"description":"Mexico (Central)"},"sa-east-1":{"description":"South America (Sao Paulo)"},"us-east-1":{"description":"US East (N. Virginia)"},"us-east-2":{"description":"US East (Ohio)"},"us-west-1":{"description":"US West (N. California)"},"us-west-2":{"description":"US West (Oregon)"}}},{"id":"aws-cn","outputs":{"dnsSuffix":"amazonaws.com.cn","dualStackDnsSuffix":"api.amazonwebservices.com.cn","implicitGlobalRegion":"cn-northwest-1","name":"aws-cn","supportsDualStack":true,"supportsFIPS":true},"regionRegex":"^cn\\\\-\\\\w+\\\\-\\\\d+$","regions":{"aws-cn-global":{"description":"AWS China global region"},"cn-north-1":{"description":"China (Beijing)"},"cn-northwest-1":{"description":"China (Ningxia)"}}},{"id":"aws-us-gov","outputs":{"dnsSuffix":"amazonaws.com","dualStackDnsSuffix":"api.aws","implicitGlobalRegion":"us-gov-west-1","name":"aws-us-gov","supportsDualStack":true,"supportsFIPS":true},"regionRegex":"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$","regions":{"aws-us-gov-global":{"description":"AWS GovCloud (US) global region"},"us-gov-east-1":{"description":"AWS GovCloud (US-East)"},"us-gov-west-1":{"description":"AWS GovCloud (US-West)"}}},{"id":"aws-iso","outputs":{"dnsSuffix":"c2s.ic.gov","dualStackDnsSuffix":"c2s.ic.gov","implicitGlobalRegion":"us-iso-east-1","name":"aws-iso","supportsDualStack":false,"supportsFIPS":true},"regionRegex":"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$","regions":{"aws-iso-global":{"description":"AWS ISO (US) global region"},"us-iso-east-1":{"description":"US ISO East"},"us-iso-west-1":{"description":"US ISO WEST"}}},{"id":"aws-iso-b","outputs":{"dnsSuffix":"sc2s.sgov.gov","dualStackDnsSuffix":"sc2s.sgov.gov","implicitGlobalRegion":"us-isob-east-1","name":"aws-iso-b","supportsDualStack":false,"supportsFIPS":true},"regionRegex":"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$","regions":{"aws-iso-b-global":{"description":"AWS ISOB (US) global region"},"us-isob-east-1":{"description":"US ISOB East (Ohio)"}}},{"id":"aws-iso-e","outputs":{"dnsSuffix":"cloud.adc-e.uk","dualStackDnsSuffix":"cloud.adc-e.uk","implicitGlobalRegion":"eu-isoe-west-1","name":"aws-iso-e","supportsDualStack":false,"supportsFIPS":true},"regionRegex":"^eu\\\\-isoe\\\\-\\\\w+\\\\-\\\\d+$","regions":{"eu-isoe-west-1":{"description":"EU ISOE West"}}},{"id":"aws-iso-f","outputs":{"dnsSuffix":"csp.hci.ic.gov","dualStackDnsSuffix":"csp.hci.ic.gov","implicitGlobalRegion":"us-isof-south-1","name":"aws-iso-f","supportsDualStack":false,"supportsFIPS":true},"regionRegex":"^us\\\\-isof\\\\-\\\\w+\\\\-\\\\d+$","regions":{"aws-iso-f-global":{"description":"AWS ISOF global region"},"us-isof-east-1":{"description":"US ISOF EAST"},"us-isof-south-1":{"description":"US ISOF SOUTH"}}}],"version":"1.1"}'),Ce="";const Te={isVirtualHostableS3Bucket:be,parseArn:e=>{const t=e.split(":");if(t.length<6)return null;const[n,r,s,i,o,...a]=t;if("arn"!==n||""===r||""===s||""===a.join(":"))return null;return{partition:r,service:s,region:i,accountId:o,resourceId:a.map((e=>e.split("/"))).flat()}},partition:e=>{const{partitions:t}=Ae;for(const n of t){const{regions:t,outputs:r}=n;for(const[n,s]of Object.entries(t))if(n===e)return{...r,...s}}for(const n of t){const{regionRegex:t,outputs:r}=n;if(new RegExp(t).test(e))return{...r}}const n=t.find((e=>"aws"===e.id));if(!n)throw new Error("Provided region was not found in the partition array or regex, and default partition with id 'aws' doesn't exist.");return{...n.outputs}}};function xe(e,t,n){e.__aws_sdk_context?e.__aws_sdk_context.features||(e.__aws_sdk_context.features={}):e.__aws_sdk_context={features:{}},e.__aws_sdk_context.features[t]=n}re.aws=Te;const Ie=/\d{12}\.ddb/;const ke="user-agent",De="x-amz-user-agent",Pe=/[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w]/g,$e=/[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w\#]/g;const Oe=e=>(t,n)=>async r=>{const{request:s}=r;if(!B.Kd.isInstance(s))return t(r);const{headers:i}=s,o=n?.userAgent?.map(Ne)||[],a=(await e.defaultUserAgentProvider()).map(Ne);await async function(e,t,n){const r=n.request;if("rpc-v2-cbor"===r?.headers?.["smithy-protocol"]&&xe(e,"PROTOCOL_RPC_V2_CBOR","M"),"function"==typeof t.retryStrategy){const n=await t.retryStrategy();"function"==typeof n.acquireInitialRetryToken?n.constructor?.name?.includes("Adaptive")?xe(e,"RETRY_MODE_ADAPTIVE","F"):xe(e,"RETRY_MODE_STANDARD","E"):xe(e,"RETRY_MODE_LEGACY","D")}if("function"==typeof t.accountIdEndpointMode){const n=e.endpointV2;switch(String(n?.url?.hostname).match(Ie)&&xe(e,"ACCOUNT_ID_ENDPOINT","O"),await(t.accountIdEndpointMode?.())){case"disabled":xe(e,"ACCOUNT_ID_MODE_DISABLED","Q");break;case"preferred":xe(e,"ACCOUNT_ID_MODE_PREFERRED","P");break;case"required":xe(e,"ACCOUNT_ID_MODE_REQUIRED","R")}}const s=e.__smithy_context?.selectedHttpAuthScheme?.identity;if(s?.$source){const t=s;t.accountId&&xe(e,"RESOLVED_ACCOUNT_ID","T");for(const[n,r]of Object.entries(t.$source??{}))xe(e,n,r)}}(n,e,r);const c=n;a.push(`m/${function(e){let t="";for(const n in e){const r=e[n];if(!(t.length+r.length+1<=1024))break;t.length?t+=","+r:t+=r}return t}(Object.assign({},n.__smithy_context?.features,c.__aws_sdk_context?.features))}`);const u=e?.customUserAgent?.map(Ne)||[],d=await e.userAgentAppId();d&&a.push(Ne([`app/${d}`]));const l=(Ce?[Ce]:[]).concat([...a,...o,...u]).join(" "),p=[...a.filter((e=>e.startsWith("aws-sdk-"))),...u].join(" ");return"browser"!==e.runtime?(p&&(i[De]=i[De]?`${i[ke]} ${p}`:p),i[ke]=l):i[De]=l,t({...r,request:s})},Ne=e=>{const t=e[0].split("/").map((e=>e.replace(Pe,"-"))).join("/"),n=e[1]?.replace($e,"-"),r=t.indexOf("/"),s=t.substring(0,r);let i=t.substring(r+1);return"api"===s&&(i=i.toLowerCase()),[s,i,n].filter((e=>e&&e.length>0)).reduce(((e,t,n)=>{switch(n){case 0:return t;case 1:return`${e}/${t}`;default:return`${e}#${t}`}}),"")},_e={name:"getUserAgentMiddleware",step:"build",priority:"low",tags:["SET_USER_AGENT","USER_AGENT"],override:!0},Ue=(e,t,n)=>{if(t in e){if("true"===e[t])return!0;if("false"===e[t])return!1;throw new Error(`Cannot load ${n} "${t}". Expected "true" or "false", got ${e[t]}.`)}};var Me;!function(e){e.ENV="env",e.CONFIG="shared config entry"}(Me||(Me={}));const Le={environmentVariableSelector:e=>Ue(e,"AWS_USE_DUALSTACK_ENDPOINT",Me.ENV),configFileSelector:e=>Ue(e,"use_dualstack_endpoint",Me.CONFIG),default:!1},Fe={environmentVariableSelector:e=>Ue(e,"AWS_USE_FIPS_ENDPOINT",Me.ENV),configFileSelector:e=>Ue(e,"use_fips_endpoint",Me.CONFIG),default:!1},je={environmentVariableSelector:e=>e.AWS_REGION,configFileSelector:e=>e.region,default:()=>{throw new Error("Region is missing")}},qe={preferredFile:"credentials"},ze=e=>"string"==typeof e&&(e.startsWith("fips-")||e.endsWith("-fips")),He=e=>ze(e)?["fips-aws-global","aws-fips"].includes(e)?"us-east-1":e.replace(/fips-(dkr-|prod-)?|-fips/,""):e,We="content-length";const Be={step:"build",tags:["SET_CONTENT_LENGTH","CONTENT_LENGTH"],name:"contentLengthMiddleware",override:!0},Ve=e=>({applyToStack:t=>{var n;t.add((n=e.bodyLengthChecker,e=>async t=>{const r=t.request;if(B.Kd.isInstance(r)){const{body:e,headers:t}=r;if(e&&-1===Object.keys(t).map((e=>e.toLowerCase())).indexOf(We))try{const t=n(e);r.headers={...r.headers,[We]:String(t)}}catch(e){}}return e({...t,request:r})}),Be)}});var Ge;!function(e){e.STANDARD="standard",e.ADAPTIVE="adaptive"}(Ge||(Ge={}));const Ke=Ge.STANDARD,Xe=["BandwidthLimitExceeded","EC2ThrottledException","LimitExceededException","PriorRequestNotComplete","ProvisionedThroughputExceededException","RequestLimitExceeded","RequestThrottled","RequestThrottledException","SlowDown","ThrottledException","Throttling","ThrottlingException","TooManyRequestsException","TransactionInProgressException"],Ze=["TimeoutError","RequestTimeout","RequestTimeoutException"],Je=[500,502,503,504],Ye=["ECONNRESET","ECONNREFUSED","EPIPE","ETIMEDOUT"],Qe=e=>429===e.$metadata?.httpStatusCode||Xe.includes(e.name)||1==e.$retryable?.throttling,et=(e,t=0)=>(e=>e.$metadata?.clockSkewCorrected)(e)||Ze.includes(e.name)||Ye.includes(e?.code||"")||Je.includes(e.$metadata?.httpStatusCode||0)||void 0!==e.cause&&t<=10&&et(e.cause,t+1);class DefaultRateLimiter{constructor(e){this.currentCapacity=0,this.enabled=!1,this.lastMaxRate=0,this.measuredTxRate=0,this.requestCount=0,this.lastTimestamp=0,this.timeWindow=0,this.beta=e?.beta??.7,this.minCapacity=e?.minCapacity??1,this.minFillRate=e?.minFillRate??.5,this.scaleConstant=e?.scaleConstant??.4,this.smooth=e?.smooth??.8;const t=this.getCurrentTimeInSeconds();this.lastThrottleTime=t,this.lastTxRateBucket=Math.floor(this.getCurrentTimeInSeconds()),this.fillRate=this.minFillRate,this.maxCapacity=this.minCapacity}getCurrentTimeInSeconds(){return Date.now()/1e3}async getSendToken(){return this.acquireTokenBucket(1)}async acquireTokenBucket(e){if(this.enabled){if(this.refillTokenBucket(),e>this.currentCapacity){const t=(e-this.currentCapacity)/this.fillRate*1e3;await new Promise((e=>DefaultRateLimiter.setTimeoutFn(e,t)))}this.currentCapacity=this.currentCapacity-e}}refillTokenBucket(){const e=this.getCurrentTimeInSeconds();if(!this.lastTimestamp)return void(this.lastTimestamp=e);const t=(e-this.lastTimestamp)*this.fillRate;this.currentCapacity=Math.min(this.maxCapacity,this.currentCapacity+t),this.lastTimestamp=e}updateClientSendingRate(e){let t;if(this.updateMeasuredRate(),Qe(e)){const e=this.enabled?Math.min(this.measuredTxRate,this.fillRate):this.measuredTxRate;this.lastMaxRate=e,this.calculateTimeWindow(),this.lastThrottleTime=this.getCurrentTimeInSeconds(),t=this.cubicThrottle(e),this.enableTokenBucket()}else this.calculateTimeWindow(),t=this.cubicSuccess(this.getCurrentTimeInSeconds());const n=Math.min(t,2*this.measuredTxRate);this.updateTokenBucketRate(n)}calculateTimeWindow(){this.timeWindow=this.getPrecise(Math.pow(this.lastMaxRate*(1-this.beta)/this.scaleConstant,1/3))}cubicThrottle(e){return this.getPrecise(e*this.beta)}cubicSuccess(e){return this.getPrecise(this.scaleConstant*Math.pow(e-this.lastThrottleTime-this.timeWindow,3)+this.lastMaxRate)}enableTokenBucket(){this.enabled=!0}updateTokenBucketRate(e){this.refillTokenBucket(),this.fillRate=Math.max(e,this.minFillRate),this.maxCapacity=Math.max(e,this.minCapacity),this.currentCapacity=Math.min(this.currentCapacity,this.maxCapacity)}updateMeasuredRate(){const e=this.getCurrentTimeInSeconds(),t=Math.floor(2*e)/2;if(this.requestCount++,t>this.lastTxRateBucket){const e=this.requestCount/(t-this.lastTxRateBucket);this.measuredTxRate=this.getPrecise(e*this.smooth+this.measuredTxRate*(1-this.smooth)),this.requestCount=0,this.lastTxRateBucket=t}}getPrecise(e){return parseFloat(e.toFixed(8))}}DefaultRateLimiter.setTimeoutFn=setTimeout;const tt=100,nt=2e4,rt="amz-sdk-invocation-id",st="amz-sdk-request",it=({retryDelay:e,retryCount:t,retryCost:n})=>({getRetryCount:()=>t,getRetryDelay:()=>Math.min(nt,e),getRetryCost:()=>n});class StandardRetryStrategy{constructor(e){this.maxAttempts=e,this.mode=Ge.STANDARD,this.capacity=500,this.retryBackoffStrategy=(()=>{let e=tt;return{computeNextBackoffDelay:t=>Math.floor(Math.min(nt,Math.random()*2**t*e)),setDelayBase:t=>{e=t}}})(),this.maxAttemptsProvider="function"==typeof e?e:async()=>e}async acquireInitialRetryToken(e){return it({retryDelay:tt,retryCount:0})}async refreshRetryTokenForRetry(e,t){const n=await this.getMaxAttempts();if(this.shouldRetry(e,t,n)){const n=t.errorType;this.retryBackoffStrategy.setDelayBase("THROTTLING"===n?500:tt);const r=this.retryBackoffStrategy.computeNextBackoffDelay(e.getRetryCount()),s=t.retryAfterHint?Math.max(t.retryAfterHint.getTime()-Date.now()||0,r):r,i=this.getCapacityCost(n);return this.capacity-=i,it({retryDelay:s,retryCount:e.getRetryCount()+1,retryCost:i})}throw new Error("No retry token available")}recordSuccess(e){this.capacity=Math.max(500,this.capacity+(e.getRetryCost()??1))}getCapacity(){return this.capacity}async getMaxAttempts(){try{return await this.maxAttemptsProvider()}catch(e){return console.warn("Max attempts provider could not resolve. Using default of 3"),3}}shouldRetry(e,t,n){return e.getRetryCount()+1<n&&this.capacity>=this.getCapacityCost(t.errorType)&&this.isRetryableError(t.errorType)}getCapacityCost(e){return"TRANSIENT"===e?10:5}isRetryableError(e){return"THROTTLING"===e||"TRANSIENT"===e}}class AdaptiveRetryStrategy{constructor(e,t){this.maxAttemptsProvider=e,this.mode=Ge.ADAPTIVE;const{rateLimiter:n}=t??{};this.rateLimiter=n??new DefaultRateLimiter,this.standardRetryStrategy=new StandardRetryStrategy(e)}async acquireInitialRetryToken(e){return await this.rateLimiter.getSendToken(),this.standardRetryStrategy.acquireInitialRetryToken(e)}async refreshRetryTokenForRetry(e,t){return this.rateLimiter.updateClientSendingRate(t),this.standardRetryStrategy.refreshRetryTokenForRetry(e,t)}recordSuccess(e){this.rateLimiter.updateClientSendingRate({}),this.standardRetryStrategy.recordSuccess(e)}}var ot=n(76982),at=n.n(ot);const ct={randomUUID:at().randomUUID},ut=new Uint8Array(256);let dt=ut.length;function lt(){return dt>ut.length-16&&(at().randomFillSync(ut),dt=0),ut.slice(dt,dt+=16)}const pt=[];for(let e=0;e<256;++e)pt.push((e+256).toString(16).slice(1));function gt(e,t=0){return pt[e[t+0]]+pt[e[t+1]]+pt[e[t+2]]+pt[e[t+3]]+"-"+pt[e[t+4]]+pt[e[t+5]]+"-"+pt[e[t+6]]+pt[e[t+7]]+"-"+pt[e[t+8]]+pt[e[t+9]]+"-"+pt[e[t+10]]+pt[e[t+11]]+pt[e[t+12]]+pt[e[t+13]]+pt[e[t+14]]+pt[e[t+15]]}const ht=function(e,t,n){if(ct.randomUUID&&!t&&!e)return ct.randomUUID();const r=(e=e||{}).random||(e.rng||lt)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=r[e];return t}return gt(r)},ft=e=>e instanceof Error?e:e instanceof Object?Object.assign(new Error,e):"string"==typeof e?new Error(e):new Error(`AWS SDK error wrapper for ${e}`);const mt="AWS_MAX_ATTEMPTS",yt="max_attempts",wt={environmentVariableSelector:e=>{const t=e[mt];if(!t)return;const n=parseInt(t);if(Number.isNaN(n))throw new Error(`Environment variable ${mt} mast be a number, got "${t}"`);return n},configFileSelector:e=>{const t=e[yt];if(!t)return;const n=parseInt(t);if(Number.isNaN(n))throw new Error(`Shared config file entry ${yt} mast be a number, got "${t}"`);return n},default:3},St={environmentVariableSelector:e=>e.AWS_RETRY_MODE,configFileSelector:e=>e.retry_mode,default:Ke};var Et=n(2203);const vt=e=>e?.body instanceof Et.Readable||"undefined"!=typeof ReadableStream&&e?.body instanceof ReadableStream,Rt=e=>void 0!==e.acquireInitialRetryToken&&void 0!==e.refreshRetryTokenForRetry&&void 0!==e.recordSuccess,bt=e=>{const t={error:e,errorType:At(e)},n=xt(e.$response);return n&&(t.retryAfterHint=n),t},At=e=>Qe(e)?"THROTTLING":et(e)?"TRANSIENT":(e=>{if(void 0!==e.$metadata?.httpStatusCode){const t=e.$metadata.httpStatusCode;return 500<=t&&t<=599&&!et(e)}return!1})(e)?"SERVER_ERROR":"CLIENT_ERROR",Ct={name:"retryMiddleware",tags:["RETRY"],step:"finalizeRequest",priority:"high",override:!0},Tt=e=>({applyToStack:t=>{t.add((e=>(t,n)=>async r=>{let s=await e.retryStrategy();const i=await e.maxAttempts();if(!Rt(s))return s?.mode&&(n.userAgent=[...n.userAgent||[],["cfg/retry-mode",s.mode]]),s.retry(t,r);{let e=await s.acquireInitialRetryToken(n.partition_id),o=new Error,a=0,c=0;const{request:u}=r,d=B.Kd.isInstance(u);for(d&&(u.headers[rt]=ht());;)try{d&&(u.headers[st]=`attempt=${a+1}; max=${i}`);const{response:n,output:o}=await t(r);return s.recordSuccess(e),o.$metadata.attempts=a+1,o.$metadata.totalRetryDelay=c,{response:n,output:o}}catch(t){const r=bt(t);if(o=ft(t),d&&vt(u))throw(n.logger instanceof b.N4?console:n.logger)?.warn("An error was encountered in a non-retryable streaming request."),o;try{e=await s.refreshRetryTokenForRetry(e,r)}catch(e){throw o.$metadata||(o.$metadata={}),o.$metadata.attempts=a+1,o.$metadata.totalRetryDelay=c,o}a=e.getRetryCount();const i=e.getRetryDelay();c+=i,await new Promise((e=>setTimeout(e,i)))}}})(e),Ct)}}),xt=e=>{if(!B.cS.isInstance(e))return;const t=Object.keys(e.headers).find((e=>"retry-after"===e.toLowerCase()));if(!t)return;const n=e.headers[t],r=Number(n);if(!Number.isNaN(r))return new Date(1e3*r);return new Date(n)};var It=n(83205),kt=n(47083),Dt=n(61002),Pt=n(55140);const $t="X-Amz-Date",Ot="X-Amz-Signature",Nt="X-Amz-Security-Token",_t="authorization",Ut=$t.toLowerCase(),Mt=[_t,Ut,"date"],Lt=Ot.toLowerCase(),Ft="x-amz-content-sha256",jt=Nt.toLowerCase(),qt={authorization:!0,"cache-control":!0,connection:!0,expect:!0,from:!0,"keep-alive":!0,"max-forwards":!0,pragma:!0,referer:!0,te:!0,trailer:!0,"transfer-encoding":!0,upgrade:!0,"user-agent":!0,"x-amzn-trace-id":!0},zt=/^proxy-/,Ht=/^sec-/,Wt="AWS4-HMAC-SHA256",Bt="AWS4-HMAC-SHA256-PAYLOAD",Vt="aws4_request",Gt={},Kt=[],Xt=(e,t,n)=>`${e}/${t}/${n}/${Vt}`,Zt=(e,t,n)=>{const r=new e(t);return r.update((0,Pt.Fo)(n)),r.digest()},Jt=({headers:e},t,n)=>{const r={};for(const s of Object.keys(e).sort()){if(null==e[s])continue;const i=s.toLowerCase();(i in qt||t?.has(i)||zt.test(i)||Ht.test(i))&&(!n||n&&!n.has(i))||(r[i]=e[s].trim().replace(/\s+/g," "))}return r};var Yt=n(16872);const Qt=async({headers:e,body:t},n)=>{for(const t of Object.keys(e))if(t.toLowerCase()===Ft)return e[t];if(null==t)return"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855";if("string"==typeof t||ArrayBuffer.isView(t)||(0,Yt.m)(t)){const e=new n;return e.update((0,Pt.Fo)(t)),(0,kt.n)(await e.digest())}return"UNSIGNED-PAYLOAD"};class HeaderFormatter{format(e){const t=[];for(const n of Object.keys(e)){const r=(0,Pt.ar)(n);t.push(Uint8Array.from([r.byteLength]),r,this.formatHeaderValue(e[n]))}const n=new Uint8Array(t.reduce(((e,t)=>e+t.byteLength),0));let r=0;for(const e of t)n.set(e,r),r+=e.byteLength;return n}formatHeaderValue(e){switch(e.type){case"boolean":return Uint8Array.from([e.value?0:1]);case"byte":return Uint8Array.from([2,e.value]);case"short":const t=new DataView(new ArrayBuffer(3));return t.setUint8(0,3),t.setInt16(1,e.value,!1),new Uint8Array(t.buffer);case"integer":const n=new DataView(new ArrayBuffer(5));return n.setUint8(0,4),n.setInt32(1,e.value,!1),new Uint8Array(n.buffer);case"long":const r=new Uint8Array(9);return r[0]=5,r.set(e.value.bytes,1),r;case"binary":const s=new DataView(new ArrayBuffer(3+e.value.byteLength));s.setUint8(0,6),s.setUint16(1,e.value.byteLength,!1);const i=new Uint8Array(s.buffer);return i.set(e.value,3),i;case"string":const o=(0,Pt.ar)(e.value),a=new DataView(new ArrayBuffer(3+o.byteLength));a.setUint8(0,7),a.setUint16(1,o.byteLength,!1);const c=new Uint8Array(a.buffer);return c.set(o,3),c;case"timestamp":const u=new Uint8Array(9);return u[0]=8,u.set(Int64.fromNumber(e.value.valueOf()).bytes,1),u;case"uuid":if(!tn.test(e.value))throw new Error(`Invalid UUID received: ${e.value}`);const d=new Uint8Array(17);return d[0]=9,d.set((0,kt.a)(e.value.replace(/\-/g,"")),1),d}}}var en;!function(e){e[e.boolTrue=0]="boolTrue",e[e.boolFalse=1]="boolFalse",e[e.byte=2]="byte",e[e.short=3]="short",e[e.integer=4]="integer",e[e.long=5]="long",e[e.byteArray=6]="byteArray",e[e.string=7]="string",e[e.timestamp=8]="timestamp",e[e.uuid=9]="uuid"}(en||(en={}));const tn=/^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;class Int64{constructor(e){if(this.bytes=e,8!==e.byteLength)throw new Error("Int64 buffers must be exactly 8 bytes")}static fromNumber(e){if(e>0x8000000000000000||e<-0x8000000000000000)throw new Error(`${e} is too large (or, if negative, too small) to represent as an Int64`);const t=new Uint8Array(8);for(let n=7,r=Math.abs(Math.round(e));n>-1&&r>0;n--,r/=256)t[n]=r;return e<0&&nn(t),new Int64(t)}valueOf(){const e=this.bytes.slice(0),t=128&e[0];return t&&nn(e),parseInt((0,kt.n)(e),16)*(t?-1:1)}toString(){return String(this.valueOf())}}function nn(e){for(let t=0;t<8;t++)e[t]^=255;for(let t=7;t>-1&&(e[t]++,0===e[t]);t--);}const rn=e=>{e=B.Kd.clone(e);for(const t of Object.keys(e.headers))Mt.indexOf(t.toLowerCase())>-1&&delete e.headers[t];return e},sn=e=>"number"==typeof e?new Date(1e3*e):"string"==typeof e?Number(e)?new Date(1e3*Number(e)):new Date(e):e;class SignatureV4{constructor({applyChecksum:e,credentials:t,region:n,service:r,sha256:s,uriEscapePath:i=!0}){this.headerFormatter=new HeaderFormatter,this.service=r,this.sha256=s,this.uriEscapePath=i,this.applyChecksum="boolean"!=typeof e||e,this.regionProvider=(0,w.t)(n),this.credentialProvider=(0,w.t)(t)}async presign(e,t={}){const{signingDate:n=new Date,expiresIn:r=3600,unsignableHeaders:s,unhoistableHeaders:i,signableHeaders:o,hoistableHeaders:a,signingRegion:c,signingService:u}=t,d=await this.credentialProvider();this.validateResolvedCredentials(d);const l=c??await this.regionProvider(),{longDate:p,shortDate:g}=on(n);if(r>604800)return Promise.reject("Signature version 4 presigned URLs must have an expiration date less than one week in the future");const h=Xt(g,l,u??this.service),f=((e,t={})=>{const{headers:n,query:r={}}=B.Kd.clone(e);for(const e of Object.keys(n)){const s=e.toLowerCase();("x-amz-"===s.slice(0,6)&&!t.unhoistableHeaders?.has(s)||t.hoistableHeaders?.has(s))&&(r[e]=n[e],delete n[e])}return{...e,headers:n,query:r}})(rn(e),{unhoistableHeaders:i,hoistableHeaders:a});d.sessionToken&&(f.query[Nt]=d.sessionToken),f.query["X-Amz-Algorithm"]=Wt,f.query["X-Amz-Credential"]=`${d.accessKeyId}/${h}`,f.query[$t]=p,f.query["X-Amz-Expires"]=r.toString(10);const m=Jt(f,s,o);return f.query["X-Amz-SignedHeaders"]=an(m),f.query[Ot]=await this.getSignature(p,h,this.getSigningKey(d,l,g,u),this.createCanonicalRequest(f,m,await Qt(e,this.sha256))),f}async sign(e,t){return"string"==typeof e?this.signString(e,t):e.headers&&e.payload?this.signEvent(e,t):e.message?this.signMessage(e,t):this.signRequest(e,t)}async signEvent({headers:e,payload:t},{signingDate:n=new Date,priorSignature:r,signingRegion:s,signingService:i}){const o=s??await this.regionProvider(),{shortDate:a,longDate:c}=on(n),u=Xt(a,o,i??this.service),d=await Qt({headers:{},body:t},this.sha256),l=new this.sha256;l.update(e);const p=(0,kt.n)(await l.digest()),g=[Bt,c,u,r,p,d].join("\n");return this.signString(g,{signingDate:n,signingRegion:o,signingService:i})}async signMessage(e,{signingDate:t=new Date,signingRegion:n,signingService:r}){return this.signEvent({headers:this.headerFormatter.format(e.message.headers),payload:e.message.body},{signingDate:t,signingRegion:n,signingService:r,priorSignature:e.priorSignature}).then((t=>({message:e.message,signature:t})))}async signString(e,{signingDate:t=new Date,signingRegion:n,signingService:r}={}){const s=await this.credentialProvider();this.validateResolvedCredentials(s);const i=n??await this.regionProvider(),{shortDate:o}=on(t),a=new this.sha256(await this.getSigningKey(s,i,o,r));return a.update((0,Pt.Fo)(e)),(0,kt.n)(await a.digest())}async signRequest(e,{signingDate:t=new Date,signableHeaders:n,unsignableHeaders:r,signingRegion:s,signingService:i}={}){const o=await this.credentialProvider();this.validateResolvedCredentials(o);const a=s??await this.regionProvider(),c=rn(e),{longDate:u,shortDate:d}=on(t),l=Xt(d,a,i??this.service);c.headers[Ut]=u,o.sessionToken&&(c.headers[jt]=o.sessionToken);const p=await Qt(c,this.sha256);!((e,t)=>{e=e.toLowerCase();for(const n of Object.keys(t))if(e===n.toLowerCase())return!0;return!1})(Ft,c.headers)&&this.applyChecksum&&(c.headers[Ft]=p);const g=Jt(c,r,n),h=await this.getSignature(u,l,this.getSigningKey(o,a,d,i),this.createCanonicalRequest(c,g,p));return c.headers[_t]=`${Wt} Credential=${o.accessKeyId}/${l}, SignedHeaders=${an(g)}, Signature=${h}`,c}createCanonicalRequest(e,t,n){const r=Object.keys(t).sort();return`${e.method}\n${this.getCanonicalPath(e)}\n${(({query:e={}})=>{const t=[],n={};for(const r of Object.keys(e)){if(r.toLowerCase()===Lt)continue;const s=(0,Dt.o)(r);t.push(s);const i=e[r];"string"==typeof i?n[s]=`${s}=${(0,Dt.o)(i)}`:Array.isArray(i)&&(n[s]=i.slice(0).reduce(((e,t)=>e.concat([`${s}=${(0,Dt.o)(t)}`])),[]).sort().join("&"))}return t.sort().map((e=>n[e])).filter((e=>e)).join("&")})(e)}\n${r.map((e=>`${e}:${t[e]}`)).join("\n")}\n\n${r.join(";")}\n${n}`}async createStringToSign(e,t,n){const r=new this.sha256;r.update((0,Pt.Fo)(n));const s=await r.digest();return`${Wt}\n${e}\n${t}\n${(0,kt.n)(s)}`}getCanonicalPath({path:e}){if(this.uriEscapePath){const t=[];for(const n of e.split("/"))0!==n?.length&&"."!==n&&(".."===n?t.pop():t.push(n));const n=`${e?.startsWith("/")?"/":""}${t.join("/")}${t.length>0&&e?.endsWith("/")?"/":""}`;return(0,Dt.o)(n).replace(/%2F/g,"/")}return e}async getSignature(e,t,n,r){const s=await this.createStringToSign(e,t,r),i=new this.sha256(await n);return i.update((0,Pt.Fo)(s)),(0,kt.n)(await i.digest())}getSigningKey(e,t,n,r){return(async(e,t,n,r,s)=>{const i=await Zt(e,t.secretAccessKey,t.accessKeyId),o=`${n}:${r}:${s}:${(0,kt.n)(i)}:${t.sessionToken}`;if(o in Gt)return Gt[o];for(Kt.push(o);Kt.length>50;)delete Gt[Kt.shift()];let a=`AWS4${t.secretAccessKey}`;for(const t of[n,r,s,Vt])a=await Zt(e,a,t);return Gt[o]=a})(this.sha256,e,n,t,r||this.service)}validateResolvedCredentials(e){if("object"!=typeof e||"string"!=typeof e.accessKeyId||"string"!=typeof e.secretAccessKey)throw new Error("Resolved credential object is not valid")}}const on=e=>{const t=(n=e,sn(n).toISOString().replace(/\.\d{3}Z$/,"Z")).replace(/[\-:]/g,"");var n;return{longDate:t,shortDate:t.slice(0,8)}},an=e=>Object.keys(e).sort().join(";"),cn=e=>{let t,n=!1;e.credentials&&(n=!0,t=(0,y.K4)(e.credentials,y.OC,y.e)),t||(t=e.credentialDefaultProvider?(0,y.te)(e.credentialDefaultProvider(Object.assign({},e,{parentClientConfig:e}))):async()=>{throw new Error("`credentials` is missing")});const r=async()=>t({callerClientConfig:e}),{signingEscapePath:s=!0,systemClockOffset:i=e.systemClockOffset||0,sha256:o}=e;let a;return a=e.signer?(0,y.te)(e.signer):e.regionInfoProvider?()=>(0,y.te)(e.region)().then((async t=>[await e.regionInfoProvider(t,{useFipsEndpoint:await e.useFipsEndpoint(),useDualstackEndpoint:await e.useDualstackEndpoint()})||{},t])).then((([t,n])=>{const{signingRegion:i,signingService:a}=t;e.signingRegion=e.signingRegion||i||n,e.signingName=e.signingName||a||e.serviceId;const c={...e,credentials:r,region:e.signingRegion,service:e.signingName,sha256:o,uriEscapePath:s};return new(e.signerConstructor||SignatureV4)(c)})):async t=>{const n=(t=Object.assign({},{name:"sigv4",signingName:e.signingName||e.defaultSigningName,signingRegion:await(0,y.te)(e.region)(),properties:{}},t)).signingRegion,i=t.signingName;e.signingRegion=e.signingRegion||n,e.signingName=e.signingName||i||e.serviceId;const a={...e,credentials:r,region:e.signingRegion,service:e.signingName,sha256:o,uriEscapePath:s};return new(e.signerConstructor||SignatureV4)(a)},{...e,systemClockOffset:i,signingEscapePath:s,credentials:n?async()=>r().then((e=>(0,It.g)(e,"CREDENTIALS_CODE","e"))):r,signer:a}},un=async(e,t,n)=>({operation:(0,w.u)(t).operation,region:await(0,w.t)(e.region)()||(()=>{throw new Error("expected `region` to be configured for `aws.auth#sigv4`")})()});const dn=e=>{const t=[];switch(e.operation){case"GetRoleCredentials":case"ListAccountRoles":case"ListAccounts":case"Logout":t.push({schemeId:"smithy.api#noAuth"});break;default:t.push(function(e){return{schemeId:"aws.auth#sigv4",signingProperties:{name:"awsssoportal",region:e.region},propertiesExtractor:(e,t)=>({signingProperties:{config:e,context:t}})}}(e))}return t},ln="3.750.0",pn={warningEmitted:!1};var gn=n(70857),hn=n(932);const fn=!1,mn=({serviceId:e,clientVersion:t})=>async n=>{const r=[["aws-sdk-js",t],["ua","2.1"],[`os/${(0,gn.platform)()}`,(0,gn.release)()],["lang/js"],["md/nodejs",`${hn.versions.node}`]],s=fn?["md/crt-avail"]:null;s&&r.push(s),e&&r.push([`api/${e}`,t]),hn.env.AWS_EXECUTION_ENV&&r.push([`exec-env/${hn.env.AWS_EXECUTION_ENV}`]);const i=await(n?.userAgentAppId?.());return i?[...r,[`app/${i}`]]:[...r]},yn={environmentVariableSelector:e=>e.AWS_SDK_UA_APP_ID,configFileSelector:e=>e.sdk_ua_app_id??e["sdk-ua-app-id"],default:Y};var wn=n(91607),Sn=n(20181);class Hash{constructor(e,t){this.algorithmIdentifier=e,this.secret=t,this.reset()}update(e,t){this.hash.update((0,Pt.Fo)(En(e,t)))}digest(){return Promise.resolve(this.hash.digest())}reset(){this.hash=this.secret?(0,ot.createHmac)(this.algorithmIdentifier,En(this.secret)):(0,ot.createHash)(this.algorithmIdentifier)}}function En(e,t){return Sn.Buffer.isBuffer(e)?e:"string"==typeof e?(0,wn.s)(e,t):ArrayBuffer.isView(e)?(0,wn.Q)(e.buffer,e.byteOffset,e.byteLength):(0,wn.Q)(e)}var vn=n(15074),Rn=n(79896);const bn=e=>{if(!e)return 0;if("string"==typeof e)return Buffer.byteLength(e);if("number"==typeof e.byteLength)return e.byteLength;if("number"==typeof e.size)return e.size;if("number"==typeof e.start&&"number"==typeof e.end)return e.end+1-e.start;if("string"==typeof e.path||Buffer.isBuffer(e.path))return(0,Rn.lstatSync)(e.path).size;if("number"==typeof e.fd)return(0,Rn.fstatSync)(e.fd).size;throw new Error(`Body Length computation failed for ${e}`)},An=e=>new Date(Date.now()+e),Cn=e=>B.cS.isInstance(e)?e.headers?.date??e.headers?.Date:void 0,Tn=(e,t)=>{const n=Date.parse(e);return((e,t)=>Math.abs(An(t).getTime()-e)>=3e5)(n,t)?n-Date.now():t},xn=(e,t)=>{if(!t)throw new Error(`Property \`${e}\` is not resolved for AWS SDK SigV4Auth`);return t};class AwsSdkSigV4Signer{async sign(e,t,n){if(!B.Kd.isInstance(e))throw new Error("The request is not an instance of `HttpRequest` and cannot be signed");const r=await(async e=>{const t=xn("context",e.context),n=xn("config",e.config),r=t.endpointV2?.properties?.authSchemes?.[0],s=xn("signer",n.signer),i=await s(r),o=e?.signingRegion,a=e?.signingRegionSet,c=e?.signingName;return{config:n,signer:i,signingRegion:o,signingRegionSet:a,signingName:c}})(n),{config:s,signer:i}=r;let{signingRegion:o,signingName:a}=r;const c=n.context;if(c?.authSchemes?.length){const[e,t]=c.authSchemes;"sigv4a"===e?.name&&"sigv4"===t?.name&&(o=t?.signingRegion??o,a=t?.signingName??a)}return await i.sign(e,{signingDate:An(s.systemClockOffset),signingRegion:o,signingService:a})}errorHandler(e){return t=>{const n=t.ServerTime??Cn(t.$response);if(n){const r=xn("config",e.config),s=r.systemClockOffset;r.systemClockOffset=Tn(n,r.systemClockOffset);r.systemClockOffset!==s&&t.$metadata&&(t.$metadata.clockSkewCorrected=!0)}throw t}}successHandler(e,t){const n=Cn(e);if(n){const e=xn("config",t.config);e.systemClockOffset=Tn(n,e.systemClockOffset)}}}var In=n(72909);const kn="required",Dn="fn",Pn="argv",$n="ref",On=!0,Nn="isSet",_n="booleanEquals",Un="error",Mn="endpoint",Ln="tree",Fn="PartitionResult",jn="getAttr",qn={[kn]:!1,type:"String"},zn={[kn]:!0,default:!1,type:"Boolean"},Hn={[$n]:"Endpoint"},Wn={[Dn]:_n,[Pn]:[{[$n]:"UseFIPS"},!0]},Bn={[Dn]:_n,[Pn]:[{[$n]:"UseDualStack"},!0]},Vn={},Gn={[Dn]:jn,[Pn]:[{[$n]:Fn},"supportsFIPS"]},Kn={[$n]:Fn},Xn={[Dn]:_n,[Pn]:[!0,{[Dn]:jn,[Pn]:[Kn,"supportsDualStack"]}]},Zn=[Wn],Jn=[Bn],Yn=[{[$n]:"Region"}],Qn={version:"1.0",parameters:{Region:qn,UseDualStack:zn,UseFIPS:zn,Endpoint:qn},rules:[{conditions:[{[Dn]:Nn,[Pn]:[Hn]}],rules:[{conditions:Zn,error:"Invalid Configuration: FIPS and custom endpoint are not supported",type:Un},{conditions:Jn,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",type:Un},{endpoint:{url:Hn,properties:Vn,headers:Vn},type:Mn}],type:Ln},{conditions:[{[Dn]:Nn,[Pn]:Yn}],rules:[{conditions:[{[Dn]:"aws.partition",[Pn]:Yn,assign:Fn}],rules:[{conditions:[Wn,Bn],rules:[{conditions:[{[Dn]:_n,[Pn]:[On,Gn]},Xn],rules:[{endpoint:{url:"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:Vn,headers:Vn},type:Mn}],type:Ln},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",type:Un}],type:Ln},{conditions:Zn,rules:[{conditions:[{[Dn]:_n,[Pn]:[Gn,On]}],rules:[{conditions:[{[Dn]:"stringEquals",[Pn]:[{[Dn]:jn,[Pn]:[Kn,"name"]},"aws-us-gov"]}],endpoint:{url:"https://portal.sso.{Region}.amazonaws.com",properties:Vn,headers:Vn},type:Mn},{endpoint:{url:"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}",properties:Vn,headers:Vn},type:Mn}],type:Ln},{error:"FIPS is enabled but this partition does not support FIPS",type:Un}],type:Ln},{conditions:Jn,rules:[{conditions:[Xn],rules:[{endpoint:{url:"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:Vn,headers:Vn},type:Mn}],type:Ln},{error:"DualStack is enabled but this partition does not support DualStack",type:Un}],type:Ln},{endpoint:{url:"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}",properties:Vn,headers:Vn},type:Mn}],type:Ln}],type:Ln},{error:"Invalid Configuration: Missing Region",type:Un}]},er=new class EndpointCache{constructor({size:e,params:t}){this.data=new Map,this.parameters=[],this.capacity=e??50,t&&(this.parameters=t)}get(e,t){const n=this.hash(e);if(!1===n)return t();if(!this.data.has(n)){if(this.data.size>this.capacity+10){const e=this.data.keys();let t=0;for(;;){const{value:n,done:r}=e.next();if(this.data.delete(n),r||++t>10)break}}this.data.set(n,t())}return this.data.get(n)}size(){return this.data.size}hash(e){let t="";const{parameters:n}=this;if(0===n.length)return!1;for(const r of n){const n=String(e[r]??"");if(n.includes("|;"))return!1;t+=n+"|;"}return t}}({size:50,params:["Endpoint","Region","UseDualStack","UseFIPS"]}),tr=(e,t={})=>er.get(e,(()=>((e,t)=>{const{endpointParams:n,logger:r}=t,{parameters:s,rules:i}=e;t.logger?.debug?.(`${se} Initial EndpointParams: ${ie(n)}`);const o=Object.entries(s).filter((([,e])=>null!=e.default)).map((([e,t])=>[e,t.default]));if(o.length>0)for(const[e,t]of o)n[e]=n[e]??t;const a=Object.entries(s).filter((([,e])=>e.required)).map((([e])=>e));for(const e of a)if(null==n[e])throw new EndpointError(`Missing required parameter: '${e}'`);const c=Re(i,{endpointParams:n,logger:r,referenceRecord:{}});return t.logger?.debug?.(`${se} Resolved endpoint: ${ie(c)}`),c})(Qn,{endpointParams:e,logger:t.logger})));re.aws=Te;var nr=n(34845);const rr="AWS_REGION",sr="AWS_DEFAULT_REGION",ir=["in-region","cross-region","mobile","standard","legacy"],or={environmentVariableSelector:e=>e.AWS_DEFAULTS_MODE,configFileSelector:e=>e.defaults_mode,default:"legacy"},ar=async e=>{if(e){const t="function"==typeof e?await e():e,n=await cr();return n?t===n?"in-region":"cross-region":"standard"}return"standard"},cr=async()=>{if(process.env.AWS_EXECUTION_ENV&&(process.env[rr]||process.env[sr]))return process.env[rr]??process.env[sr];if(!process.env.AWS_EC2_METADATA_DISABLED)try{const{getInstanceMetadataEndpoint:e,httpRequest:t}=await Promise.resolve().then(n.bind(n,53614)),r=await e();return(await t({...r,path:"/latest/meta-data/placement/region"})).toString()}catch(e){}},ur=e=>{(0,b.I9)(process.version);const t=(({region:e=(0,u.Z)(je),defaultsMode:t=(0,u.Z)(or)}={})=>(0,nr.Bj)((async()=>{const n="function"==typeof t?await t():t;switch(n?.toLowerCase()){case"auto":return ar(e);case"in-region":case"cross-region":case"mobile":case"standard":case"legacy":return Promise.resolve(n?.toLocaleLowerCase());case void 0:return Promise.resolve("legacy");default:throw new Error(`Invalid parameter for "defaultsMode", expect ${ir.join(", ")}, got ${n}`)}})))(e),n=()=>t().then(b.lT),r=(e=>({apiVersion:"2019-06-10",base64Decoder:e?.base64Decoder??In.E,base64Encoder:e?.base64Encoder??In.n,disableHostPrefix:e?.disableHostPrefix??!1,endpointProvider:e?.endpointProvider??tr,extensions:e?.extensions??[],httpAuthSchemeProvider:e?.httpAuthSchemeProvider??dn,httpAuthSchemes:e?.httpAuthSchemes??[{schemeId:"aws.auth#sigv4",identityProvider:e=>e.getIdentityProvider("aws.auth#sigv4"),signer:new AwsSdkSigV4Signer},{schemeId:"smithy.api#noAuth",identityProvider:e=>e.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new y.mR}],logger:e?.logger??new b.N4,serviceId:e?.serviceId??"SSO",urlParser:e?.urlParser??h.D,utf8Decoder:e?.utf8Decoder??Pt.ar,utf8Encoder:e?.utf8Encoder??Pt.Pq}))(e);var s;(s=process.version)&&!pn.warningEmitted&&parseInt(s.substring(1,s.indexOf(".")))<18&&(pn.warningEmitted=!0,process.emitWarning("NodeDeprecationWarning: The AWS SDK for JavaScript (v3) will\nno longer support Node.js 16.x on January 6, 2025.\n\nTo continue receiving updates to AWS services, bug fixes, and security\nupdates please upgrade to a supported Node.js LTS version.\n\nMore information can be found at: https://a.co/74kJMmI"));const i={profile:e?.profile};return{...r,...e,runtime:"node",defaultsMode:t,bodyLengthChecker:e?.bodyLengthChecker??bn,defaultUserAgentProvider:e?.defaultUserAgentProvider??mn({serviceId:r.serviceId,clientVersion:ln}),maxAttempts:e?.maxAttempts??(0,u.Z)(wt,e),region:e?.region??(0,u.Z)(je,{...qe,...i}),requestHandler:vn.$c.create(e?.requestHandler??n),retryMode:e?.retryMode??(0,u.Z)({...St,default:async()=>(await n()).retryMode||Ke},e),sha256:e?.sha256??Hash.bind(null,"sha256"),streamCollector:e?.streamCollector??vn.kv,useDualstackEndpoint:e?.useDualstackEndpoint??(0,u.Z)(Le,i),useFipsEndpoint:e?.useFipsEndpoint??(0,u.Z)(Fe,i),userAgentAppId:e?.userAgentAppId??(0,u.Z)(yn,i)}},dr=e=>{let t=async()=>{if(void 0===e.region)throw new Error("Region is missing from runtimeConfig");const t=e.region;return"string"==typeof t?t:t()};return{setRegion(e){t=e},region:()=>t}},lr=e=>{const t=e.httpAuthSchemes;let n=e.httpAuthSchemeProvider,r=e.credentials;return{setHttpAuthScheme(e){const n=t.findIndex((t=>t.schemeId===e.schemeId));-1===n?t.push(e):t.splice(n,1,e)},httpAuthSchemes:()=>t,setHttpAuthSchemeProvider(e){n=e},httpAuthSchemeProvider:()=>n,setCredentials(e){r=e},credentials:()=>r}};class SSOClient extends b.Kj{config;constructor(...[e]){const t=ur(e||{});var n;const r=(e=>{const t=e.tls??!0,{endpoint:n}=e,r=null!=n?async()=>f(await(0,w.t)(n)()):void 0,s=!!n,i={...e,endpoint:r,tls:t,isCustomEndpoint:s,useDualstackEndpoint:(0,w.t)(e.useDualstackEndpoint??!1),useFipsEndpoint:(0,w.t)(e.useFipsEndpoint??!1)};let o;return i.serviceConfiguredEndpoint=async()=>(e.serviceId&&!o&&(o=g(e.serviceId)),o),i})((e=>{const{region:t,useFipsEndpoint:n}=e;if(!t)throw new Error("Region is missing");return{...e,region:async()=>{if("string"==typeof t)return He(t);const e=await t();return He(e)},useFipsEndpoint:async()=>{const e="string"==typeof t?t:await t();return!!ze(e)||("function"!=typeof n?Promise.resolve(!!n):n())}}})((e=>{const{retryStrategy:t}=e,n=(0,w.t)(e.maxAttempts??3);return{...e,maxAttempts:n,retryStrategy:async()=>t||(await(0,w.t)(e.retryMode)()===Ge.ADAPTIVE?new AdaptiveRetryStrategy(n):new StandardRetryStrategy(n))}})(function(e){const t=(0,y.te)(e.userAgentAppId??Y);return{...e,customUserAgent:"string"==typeof e.customUserAgent?[[e.customUserAgent]]:e.customUserAgent,userAgentAppId:async()=>{const n=await t();if(!function(e){return void 0===e||"string"==typeof e&&e.length<=50}(n)){const t="NoOpLogger"!==e.logger?.constructor?.name&&e.logger?e.logger:console;"string"!=typeof n?t?.warn("userAgentAppId must be a string or undefined."):n.length>50&&t?.warn("The provided userAgentAppId exceeds the maximum length of 50 characters.")}return n}}}((n=t,{...n,useDualstackEndpoint:n.useDualstackEndpoint??!1,useFipsEndpoint:n.useFipsEndpoint??!1,defaultSigningName:"awsssoportal"})))));const s=((e,t)=>{const n={...dr(e),...(0,b.xA)(e),...(0,B.eS)(e),...lr(e)};return t.forEach((e=>e.configure(n))),{...e,...(s=n,{region:s.region()}),...(0,b.uv)(n),...(0,B.jt)(n),...(r=n,{httpAuthSchemes:r.httpAuthSchemes(),httpAuthSchemeProvider:r.httpAuthSchemeProvider(),credentials:r.credentials()})};var r,s})({...cn(r)},e?.extensions||[]);super(s),this.config=s,this.middlewareStack.use((e=>({applyToStack:t=>{t.add(Oe(e),_e)}}))(this.config)),this.middlewareStack.use(Tt(this.config)),this.middlewareStack.use(Ve(this.config)),this.middlewareStack.use(G(this.config)),this.middlewareStack.use((this.config,{applyToStack:e=>{e.add(((e,t)=>async n=>{try{const r=await e(n),{clientName:s,commandName:i,logger:o,dynamoDbDocumentClientOptions:a={}}=t,{overrideInputFilterSensitiveLog:c,overrideOutputFilterSensitiveLog:u}=a,d=c??t.inputFilterSensitiveLog,l=u??t.outputFilterSensitiveLog,{$metadata:p,...g}=r.output;return o?.info?.({clientName:s,commandName:i,input:d(n.input),output:l(g),metadata:p}),r}catch(e){const{clientName:r,commandName:s,logger:i,dynamoDbDocumentClientOptions:o={}}=t,{overrideInputFilterSensitiveLog:a}=o,c=a??t.inputFilterSensitiveLog;throw i?.error?.({clientName:r,commandName:s,input:c(n.input),error:e,metadata:e.$metadata}),e}}),K)}})),this.middlewareStack.use(J(this.config)),this.middlewareStack.use((0,y.wB)(this.config,{httpAuthSchemeParametersProvider:un,identityProviderConfigProvider:async e=>new y.h$({"aws.auth#sigv4":e.credentials})})),this.middlewareStack.use((0,y.lW)(this.config))}destroy(){super.destroy()}}}};
//# sourceMappingURL=155.js.map